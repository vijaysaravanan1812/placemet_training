
1)  Reverse the given singly linked list
2)  Detect the loop in linked list
3)  Return the node which is starting point of loop
4)  Count the length of loop
5)  Find the intersection of two linked list
6)  Check given linked list is palindrome 
7)  Find middle element of linked list
8)  Rotation of linked list
9)  Getting Nth node from last
10) Removing duplicates in linked list
    ex 
    1 -> 1 -> 2 -> 4 -> 5
    1 -> 2 -> 4 -> 5

11) Removing duplicates in linked list
    ex 
        1 -> 1 -> 2 -> 4 -> 5
        2 -> 4 -> 5

12) Given pointer to node in linked list, delete it in O(1)
    ex 
        1 -> 3 -> 45 -> 34
        i/p 45
        1 -> 3 -> 34

13) Merge two sorted linked list
14) Merge K sorted linked list
15) Pairwise swap nodes in linked list
16) Given the head of a singly linked list,
    group all the nodes with odd indices together 
    followed by the nodes with even indices, and return the
    reordered list.

